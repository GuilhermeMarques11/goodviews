// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  password String
  name String
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
  ratings Rating[]

  following Follow[] @relation("followsFrom") // users this user follows
  followers Follow[] @relation("followsTo") //users following this user
}

model Session {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Rating {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  mediaId Int
  mediaType String 
  mediaTitle String
  score Int 
  comment String? 
  createdAt DateTime @default(now())
  poster_path String?
  overview String?

  @@unique([userId, mediaId, mediaType])
}

model Follow {
  followerId String
  followingId String
  createdAt DateTime @default(now())

  follower User @relation("followsFrom", fields: [followerId], references: [id])
  following User @relation("followsTo", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}